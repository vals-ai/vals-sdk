# Generated by ariadne-codegen
# Source: vals/graphql/

from typing import Any, Optional

from pydantic import Field

from .base_model import BaseModel


class MarkQuestionAnswerSetAsComplete(BaseModel):
    mark_question_answer_set_as_complete: Optional[
        "MarkQuestionAnswerSetAsCompleteMarkQuestionAnswerSetAsComplete"
    ] = Field(alias="markQuestionAnswerSetAsComplete")


class MarkQuestionAnswerSetAsCompleteMarkQuestionAnswerSetAsComplete(BaseModel):
    question_answer_set: (
        "MarkQuestionAnswerSetAsCompleteMarkQuestionAnswerSetAsCompleteQuestionAnswerSet"
    ) = Field(alias="questionAnswerSet")


class MarkQuestionAnswerSetAsCompleteMarkQuestionAnswerSetAsCompleteQuestionAnswerSet(
    BaseModel
):
    id: Any


MarkQuestionAnswerSetAsComplete.model_rebuild()
MarkQuestionAnswerSetAsCompleteMarkQuestionAnswerSetAsComplete.model_rebuild()
