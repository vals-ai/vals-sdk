# Generated by ariadne-codegen
# Source: vals/graphql/

from datetime import datetime
from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import RunReviewStatusEnum, TestResultReviewStatusEnum


class AddOrRemoveUsersToRunReview(BaseModel):
    update_assigned_reviewers: Optional[
        "AddOrRemoveUsersToRunReviewUpdateAssignedReviewers"
    ] = Field(alias="updateAssignedReviewers")


class AddOrRemoveUsersToRunReviewUpdateAssignedReviewers(BaseModel):
    single_test_reviews: List[
        "AddOrRemoveUsersToRunReviewUpdateAssignedReviewersSingleTestReviews"
    ] = Field(alias="singleTestReviews")


class AddOrRemoveUsersToRunReviewUpdateAssignedReviewersSingleTestReviews(BaseModel):
    id: Any
    status: TestResultReviewStatusEnum
    started_at: datetime = Field(alias="startedAt")
    completed_at: Optional[datetime] = Field(alias="completedAt")
    test_result: (
        "AddOrRemoveUsersToRunReviewUpdateAssignedReviewersSingleTestReviewsTestResult"
    ) = Field(alias="testResult")
    run_human_review: (
        "AddOrRemoveUsersToRunReviewUpdateAssignedReviewersSingleTestReviewsRunHumanReview"
    ) = Field(alias="runHumanReview")
    locked_by: Optional[str] = Field(alias="lockedBy")
    completed_by: str = Field(alias="completedBy")
    feedback: str


class AddOrRemoveUsersToRunReviewUpdateAssignedReviewersSingleTestReviewsTestResult(
    BaseModel
):
    id: Any


class AddOrRemoveUsersToRunReviewUpdateAssignedReviewersSingleTestReviewsRunHumanReview(
    BaseModel
):
    id: Any
    status: Optional[RunReviewStatusEnum]
    created_by: str = Field(alias="createdBy")


AddOrRemoveUsersToRunReview.model_rebuild()
AddOrRemoveUsersToRunReviewUpdateAssignedReviewers.model_rebuild()
AddOrRemoveUsersToRunReviewUpdateAssignedReviewersSingleTestReviews.model_rebuild()
