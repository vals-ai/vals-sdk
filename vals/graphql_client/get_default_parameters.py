# Generated by ariadne-codegen
# Source: vals/graphql/

from pydantic import Field

from .base_model import BaseModel


class GetDefaultParameters(BaseModel):
    default_parameters: "GetDefaultParametersDefaultParameters" = Field(
        alias="defaultParameters"
    )


class GetDefaultParametersDefaultParameters(BaseModel):
    eval_model: str = Field(alias="evalModel")
    maximum_threads: int = Field(alias="maximumThreads")
    run_golden_eval: bool = Field(alias="runGoldenEval")
    run_confidence_evaluation: bool = Field(alias="runConfidenceEvaluation")
    new_line_stop_option: bool = Field(alias="newLineStopOption")
    create_text_summary: bool = Field(alias="createTextSummary")
    detect_refusals: bool = Field(alias="detectRefusals")
    model_under_test: str = Field(alias="modelUnderTest")
    temperature: float
    max_output_tokens: int = Field(alias="maxOutputTokens")
    heavyweight_factor: int = Field(alias="heavyweightFactor")
    system_prompt: str = Field(alias="systemPrompt")


GetDefaultParameters.model_rebuild()
