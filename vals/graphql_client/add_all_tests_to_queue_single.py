# Generated by ariadne-codegen
# Source: vals/graphql/

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel


class AddAllTestsToQueueSingle(BaseModel):
    add_all_single_test_review_to_queue: Optional[
        "AddAllTestsToQueueSingleAddAllSingleTestReviewToQueue"
    ] = Field(alias="addAllSingleTestReviewToQueue")


class AddAllTestsToQueueSingleAddAllSingleTestReviewToQueue(BaseModel):
    single_test_reviews: List[
        "AddAllTestsToQueueSingleAddAllSingleTestReviewToQueueSingleTestReviews"
    ] = Field(alias="singleTestReviews")


class AddAllTestsToQueueSingleAddAllSingleTestReviewToQueueSingleTestReviews(BaseModel):
    id: Any
    test_result: (
        "AddAllTestsToQueueSingleAddAllSingleTestReviewToQueueSingleTestReviewsTestResult"
    ) = Field(alias="testResult")


class AddAllTestsToQueueSingleAddAllSingleTestReviewToQueueSingleTestReviewsTestResult(
    BaseModel
):
    id: Any
    run_fk: (
        "AddAllTestsToQueueSingleAddAllSingleTestReviewToQueueSingleTestReviewsTestResultRunFk"
    ) = Field(alias="runFk")


class AddAllTestsToQueueSingleAddAllSingleTestReviewToQueueSingleTestReviewsTestResultRunFk(
    BaseModel
):
    run_id: str = Field(alias="runId")


AddAllTestsToQueueSingle.model_rebuild()
AddAllTestsToQueueSingleAddAllSingleTestReviewToQueue.model_rebuild()
AddAllTestsToQueueSingleAddAllSingleTestReviewToQueueSingleTestReviews.model_rebuild()
AddAllTestsToQueueSingleAddAllSingleTestReviewToQueueSingleTestReviewsTestResult.model_rebuild()
